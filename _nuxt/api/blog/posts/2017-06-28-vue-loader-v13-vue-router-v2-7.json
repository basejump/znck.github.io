{"id":"2017-06-28-vue-loader-v13-vue-router-v2-7","slug":"vue-loader-v13-vue-router-v2-7","highlightedLanguages":["javascript"],"source":"---\ndate: 2017-06-28\ndescription: What's new in vue-loader v13.0.0 and vue-router v2.7.0\ntags:\n  - vue\n  - vue-loader\n  - vue-router\ncollection: New in Vue\n---\n# Vue Loader v13.0.0 and Router v2.7.0 are Released\n\nNew versions of vue-loader and vue-router has been released and vue 2.4 would be released soon.\n\n## What's New in Vue Loader v13.0.0\n\n#### New Stuff\n\nThe `esModule` option is added. It is `true` by default. We now use ES modules internally to take advantage of webpack 3 scope hoisting. This should result in smaller bundle sizes but it has also introduced *a breaking change*.\n\nWe are using PostCSS v6.0.1. This might break old PostCSS plugins that haven't been updated yet.\n\n#### Breaking Changes\n\nAs export from a `*.vue` file is now an ES module by default, async components via dynmic import will break. \n\n``` javascript\nconst Foo = () => import('./Foo.vue)\n```\n\n*Note:* This would continue to work with Vue v2.4 + vue-router v2.7, which will automatically resolve ES modules' default exports when dealing with async components. In earlier versions of Vue and vue-router you will have to do this:\n\n``` javascript\nconst Foo = () => import('./Foo.vue').then(m => m.default)\n```\n\nAlternatively, you can turn off the new behavior by explicitly using `esModule: false` in vue-loader options.\n\nCommonJS-style requires will also need to be updated:\n\n``` javascript\n// before\nconst Foo = require('./Foo.vue')\n\n// after\nconst Foo = require('./Foo.vue').default\n```\n\n## What's New in Vue Router v2.7.0\n\n#### New Stuff\n\nWhen resolving async components, we will now automatically resolve the default export if the component module is an ES module.\n\n#### Bug Fixes\n\nComponent `beforeRouteUpdate` was overriden by mixin `beforeRouteUpdate`, merge strategy for `beforeRouteUpdate` is fixed now.\n","rendered":"<h1>Vue Loader v13.0.0 and Router v2.7.0 are Released</h1>\n<p>New versions of vue-loader and vue-router has been released and vue 2.4 would be released soon.</p>\n<h2>What's New in Vue Loader v13.0.0</h2>\n<h4>New Stuff</h4>\n<p>The <code>esModule</code> option is added. It is <code>true</code> by default. We now use ES modules internally to take advantage of webpack 3 scope hoisting. This should result in smaller bundle sizes but it has also introduced <em>a breaking change</em>.</p>\n<p>We are using PostCSS v6.0.1. This might break old PostCSS plugins that haven't been updated yet.</p>\n<h4>Breaking Changes</h4>\n<p>As export from a <code>*.vue</code> file is now an ES module by default, async components via dynmic import will break.</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span>'<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>Foo<span class=\"token punctuation\">.</span>vue<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><em>Note:</em> This would continue to work with Vue v2.4 + vue-router v2.7, which will automatically resolve ES modules' default exports when dealing with async components. In earlier versions of Vue and vue-router you will have to do this:</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Foo.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span><span class=\"token operator\">></span> m<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Alternatively, you can turn off the new behavior by explicitly using <code>esModule: false</code> in vue-loader options.</p>\n<p>CommonJS-style requires will also need to be updated:</p>\n<pre><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// before</span>\n<span class=\"token keyword\">const</span> Foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Foo.vue'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// after</span>\n<span class=\"token keyword\">const</span> Foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Foo.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span>\n</code></pre>\n<h2>What's New in Vue Router v2.7.0</h2>\n<h4>New Stuff</h4>\n<p>When resolving async components, we will now automatically resolve the default export if the component module is an ES module.</p>\n<h4>Bug Fixes</h4>\n<p>Component <code>beforeRouteUpdate</code> was overriden by mixin <code>beforeRouteUpdate</code>, merge strategy for <code>beforeRouteUpdate</code> is fixed now.</p>\n","attributes":{"date":"2017-06-28T00:00:00.000Z","description":"What's new in vue-loader v13.0.0 and vue-router v2.7.0","tags":[{"id":"vue","name":"vue"},{"id":"vue-loader","name":"vue-loader"},{"id":"vue-router","name":"vue-router"}],"collection":{"id":"new-in-vue","name":"New in Vue"},"title":"Vue Loader v13.0.0 and Router v2.7.0 are Released","updated_at":"2017-06-30T18:31:38.000Z"},"title":"Vue Loader v13.0.0 and Router v2.7.0 are Released","description":"What's new in vue-loader v13.0.0 and vue-router v2.7.0","keywords":["vue","vue-loader","vue-router"],"published_at":"2017-06-28T00:00:00.000Z","updated_at":"2017-06-30T18:31:38.000Z","year":2017,"month":6,"day":29,"prev":{"id":"2017-03-10-provide-inject-in-vue-2-2","title":"Provide/Inject in Vue 2.2","description":"Exploring provide & inject pair in Vue 2.2","published_at":"2017-03-10T00:00:00.000Z"}}